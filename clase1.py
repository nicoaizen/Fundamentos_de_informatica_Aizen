# Para pensar ğŸ¤”: Dado el siguiente texto:
# texto = 'Esta es la linea uno\npalabra en la linea dos\n'
# Â¿CÃ³mo crees que darÃ¡n las siguientes bÃºsquedas?
# expresion regular a: '^palabra'
# 	PodrÃ­a devolver la cantidad de veces que aparece en el texto "palabra" al principio de una lÃ­nea o dÃ³nde estÃ¡ o un booleano que confirme que lo encontrÃ³.  
# expresion regular b: '\Apalabra'
# 	Se fija si al comienzo del texto estÃ¡ "palabra" y podrÃ­a devolver un booleano.
# expresion regular c: 'palabra$'
# 	PodrÃ­a devolver la cantidad de veces que aparece en el texto "palabra" al final de una lÃ­nea o dÃ³nde estÃ¡ o un booleano que confirme que lo encontrÃ³.
# expresion regular d: 'palabra\Z'
# 	PodrÃ­a devolver la cantidad de veces que aparece en el texto "palabra" al principio de una lÃ­nea o dÃ³nde estÃ¡ o un booleano que confirme que lo encontrÃ³.
# Para pensar ğŸ¤”: Â¿QuÃ© significarÃ¡ la expresiÃ³n regular "X(.*)Y"? 
# Ennumera algunas de las posibles strings que cumplen con dicha condiciÃ³n.
# 	Significa todos los caracteres que se encuentren entre X e Y. 
# 	Las secuencias de escape son una combinaciÃ³n de caracteres que tiene un significado distinto de los caracteres literales 
# 	contenidos en ella y se utilizan para definir ciertos caracteres especiales dentro de cadenas de teX(to, 
# 	tipicamente aquellos que dan formato al mismo. )Y aÃºn cuando son un conjunto de caracteres, una secuencia de escape se considerada un carÃ¡cter Ãºnico.
# DesafÃ­o I: Â¿ConstruÃ­ la expresiÃ³n regular que obtenga al menos 4 dÃ­gitos?
# 	\d{4,}
# DesafÃ­o II: Â¿ConstruÃ­ la expresiÃ³n regular que obtenga al menos entre 3 y 6 letras minÃºsculas?
# 	[a-z]{3,6}
# DesafÃ­o III: Â¿ConstruÃ­ la expresiÃ³n regular que obtenga todas las apariciones del patrÃ³n ab en un string?
# 	ab*
# Para pensar ğŸ¤”: Â¿Existe una Ãºnica respuesta para los ejercicios? Â¿QuÃ© otras alternativas se te ocurren?
# 	MÃ¡s debe haber, que las sepamos es otra cosa.
# Desafio IV: Â¿QuÃ© expresiÃ³n regular usarÃ­as para extraer el nÃºmero de estudiantes que hay en una clase segÃºn el siguiente texto:
# texto = 'En la clase de IntroducciÃ³n a la programaciÃ³n hay 30 estudiantes'
# 	\d
# Para pensar ğŸ¤”: Â¿QuÃ© resultado obtenemos al ejecutar en la Ãºltima linea?
# 	true o la posiciÃ³n de los caracteres
# Desafio V: imprimÃ­ el fragmento del texto entre la posiciÃ³n 22 y 26 Â¿QuÃ© resultado obtenÃ©s? Â¿QuÃ© quiere decir el mensaje span?
# 	<re.Match object; span=(22, 26), match='amet'>
# Para pensar ğŸ¤”: Â¿QuÃ© resultado obtenemos? Â¿Para quÃ© sirve la funciÃ³n match()?
# 	Nulo. Devuelve solo lo que esta al comienzo.
# Para pensar ğŸ¤”: Â¿QuÃ© resultado obtenemos? Â¿Para quÃ© sirve la funciÃ³n group()?
# 	Devuleve "amet". Agrupa los caracteres que encontrÃ³ y los devuelve como string.
# Para pensar ğŸ¤”: Â¿QuÃ© resultado obtenemos?
# 	Findall busca todas las coincidencias del patrÃ³n y devuelve una lista
# Desafio VI: ExpresÃ¡ el patron de bÃºsqueda utilizando lo visto anteriormente sobre metacaracteres y rangos.
# Para pensar ğŸ¤”: Â¿QuÃ© resultado obtenemos? Â¿Para quÃ© sirve la funciÃ³n sub?
# 	Para reemplazar todas las ocurrencias del patrÃ³n por otro patrÃ³n.